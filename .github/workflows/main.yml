name: Test

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Set Release version env variable
      run: |
        echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Test RELEASE_VERSION
      run: echo {{ env.RELEASE_VERSION }}

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: Test SHORT_SHA
      run: echo {{ env.SHORT_SHA }}

    - name: If Version does contain SNAPSHOT add SHORT_SHA
      if: contains(env.RELEASE_VERSION, 'SNAPSHOT')
      run: echo "RELEASE_NAME=${{ env.RELEASE_VERSION }}-${{ env.SHORT_SHA }}" >> $GITHUB_ENV

    - name: If Version does not contain SNAPSHOT add nothing
      if: false == contains(env.RELEASE_VERSION, 'SNAPSHOT')
      run: echo "RELEASE_NAME=${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV

    - name: Test RELEASE_NAME
      run: echo {{ env.RELEASE_NAME }}

    # CREATE GITHUB RELEASE AND ADD ASSETS
    - id: create-release
      name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: WoPeD-${{ env.RELEASE_NAME }}
        release_name: WoPeD-${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false